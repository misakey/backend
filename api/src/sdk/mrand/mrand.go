package mrand

import (
	"crypto/rand"
	"encoding/base64"
	"io"
	"math/big"

	"gitlab.misakey.dev/misakey/backend/api/src/sdk/merr"
)

const charset = "abcdefghijklmnopqrstuvwxyz" +
	"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"

func StringWithCharset(length int, charset string) (string, error) {
	b := make([]byte, length)
	for i := range b {
		nb, err := rand.Int(rand.Reader, big.NewInt(int64(len(charset))))
		if err != nil {
			return "", err
		}
		b[i] = charset[nb.Int64()]
	}
	return string(b), nil
}

func String(length int) (string, error) {
	return StringWithCharset(length, charset)
}

// Base64String of nÂ bytes randomly generated by reading from crypto/rand.Reader
func Base64String(n int) (string, error) {
	bytes := make([]byte, n)
	readN, err := io.ReadFull(rand.Reader, bytes)
	if err != nil {
		return "", merr.From(err).Desc("reading from rand")
	}
	if readN != n {
		return "", merr.Internal().Descf("did not read %d bytes from rand", n)
	}
	return base64.StdEncoding.EncodeToString(bytes), nil
}
